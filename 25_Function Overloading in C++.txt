# Function Overloading: 


* Function overloading is a feature of object-oriented programming where two or more functions can have the same name but different parameters.

* When a function name is overloaded with different different jobs then it is called Function Overloading.

* In Function Overloading “Function” name should be the same and the arguments should be different. 

_ _ _ _ _ _ _ _ _ _ _ _ _ _ 


# Example-1 Code for Function Overloading: 


#include<iostream>
using namespace std;

int sum(int a, int b){
    cout<<"(Done using function with 2 arguments) & the Sum is: ";
    return a+b;
}

int sum(int a, int b, int c){
    cout<<"(Done using function with 3 arguments) & the Sum is: ";
    return a+b+c;
}

int main(){

    cout<<"# The sum of 3 and 6 is: "<<sum(3,6)<<endl;
    cout<<"# The sum of 3, 7 and 6 is "<<sum(3, 7, 6)<<endl;

    return 0;
}

_ _ _ _ _ _ _ _ _ _ _ _ _ _ 


# Example-2 Code for Function Overloading: 


#include<iostream>
using namespace std;


// Calculate the volume of a cylinder
int volume(double r, int h){
    return(3.14 * r *r *h);
}

// Calculate the volume of a cube
int volume(int a){
    return (a * a * a);
}

// Calculate the volume of a cuboid 
int volume (int l, int b, int h){
    return (l*b*h);
}

int main(){

    cout<<"@ The volume of cuboid of length 7, breadth 3 and height 6 is: "<<volume(3, 7, 6)<<endl;
    cout<<"@ The volume of cylinder of radius 3 and height 6 is: "<<volume(3, 6)<<endl;
    cout<<"@ The volume of cube of side 3 is: "<<volume(3)<<endl;

    return 0;
}

_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _




