# Dynamic Initialization of Objects Using Constructors:


* If we take user input first and then we decide to create an object, then dynamically we will initialize the object. 

* This means even after the code is completely written we still don't know which constructor will run. We will run the program, user will give the input and then we will know that which constructor will be invoked. 

* So, which constructor will be invoked, it depends on user input and this is called "Dynamic Initialization of Objects Using constructors". 

_ _ _ _ _ _ _ _ _ _ _ _ _ _


# Example Code for Dynamic Initialization of Objects Using constructors: 


#include<iostream>
using namespace std;


class BankDeposit{
    int principal;
    int years;
    float interestRate;
    float returnValue;

    public:
        BankDeposit(){}
        BankDeposit(int p, int y, float r);         // r can be a value like 0.04 (here return rate is in decimals) 
        BankDeposit(int p, int y, int r);           // r can be a value like 14 (here return rate is in percentage) 
        void show();
};


BankDeposit :: BankDeposit(int p, int y, float r){
    principal = p;
    years = y;
    interestRate = r;
    returnValue = principal;
    for (int i = 0; i < y; i++)
    {
        returnValue = returnValue * (1+interestRate);
    }
}

BankDeposit :: BankDeposit(int p, int y, int r){
    principal = p;
    years = y;
    interestRate = float(r)/100;
    returnValue = principal;
    for (int i = 0; i < y; i++)
    {
        returnValue = returnValue * (1+interestRate);
    }
}

void BankDeposit :: show(){
    cout<< endl << "@ Principal amount was " << principal << ". Return value after " << years << " years is " << returnValue << endl;
}

int main(){

    BankDeposit bd1, bd2, bd3;
    int p, y;
    float r;
    int R;  
    
    cout<<"Enter the value of p y and r"<<endl;
    cin>>p>>y>>r;
    bd1 = BankDeposit(p, y, r);                     // This invokes (int, int, float) constructor 
    bd1.show();

    cout<<"Enter the value of p y and R"<<endl;
    cin>>p>>y>>R;
    bd2 = BankDeposit(p, y, R);                     // This invokes (int, int, int) constructor 
    bd2.show();

    // C++ Compiler is smart enough that after the user has given the input, as per the input it uses the constructor which suits best. 

    // Above both the constructors have 3-3 parameters, but as both the functions have different datatypes as formal arguments on that basis both are two different constructors. 

    // & This is called "Dynamic Initialization of Objects Using Constructors".

    return 0;
}


_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _




